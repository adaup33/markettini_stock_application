name: CI

on:
  push:
    branches: ["main", "master"]
  pull_request:
    branches: ["main", "master"]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      MONGODB_URI: ${{ secrets.MONGODB_URI }}
    services:
      mongo:
        image: mongo:6.0
        ports:
          - 27017:27017
           
    
    steps:

      - name: Create .env file
        run: | 
            echo "MONGODB_URI: ${{ secrets.MONGODB_URI }}" >> .env  

      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
  
      - name: Install dependencies
        run: |
          npm install -g npm-check-updates
          ncu -u # Updates package.json with latest versions
          npm install
          npm install -g @mermaid-js/mermaid-cli
          npm i puppeteer

      # Install Chromium for Puppeteer/Mermaid CLI
      - name: Install Chromium
        run: |
          sudo apt-get update
          sudo apt-get install -y chromium-browser

      # Lint is non-blocking so CI continues even if lint reports errors
      - name: Lint (non-blocking)
        run: npm run lint
        continue-on-error: true

      # Typecheck is non-blocking so CI continues even if type errors exist
      - name: Typecheck (non-blocking)
        run: npm run typecheck
        continue-on-error: true

      - name: Build
        run: npm run build

      - name: Render Mermaid diagrams
        env:
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: "true"
          PUPPETEER_EXECUTABLE_PATH: "/usr/bin/chromium-browser"
        run: |
          mkdir -p docs/images
          npx @mermaid-js/mermaid-cli --puppeteerConfigFile puppeteer-config.json -i diagrams/architecture.mmd -o docs/images/architecture.png
          npx @mermaid-js/mermaid-cli --puppeteerConfigFile puppeteer-config.json -i diagrams/watchlist-erd.mmd -o docs/images/watchlist-erd.png

      - name: Render PlantUML diagram
        # Use the official plantuml docker image to render .puml to png
        run: |
          mkdir -p docs/images
          docker run --rm -v "${{ github.workspace }}:/workspace" plantuml/plantuml -tpng /workspace/diagrams/signup-sequence.puml -o /workspace/docs/images

      - name: Upload rendered diagrams as artifact
        uses: actions/upload-artifact@v4
        with:
          name: diagrams
          path: docs/images

      - name: Wait for MongoDB
        env:
           MONGODB_URI: ${{ secrets.MONGODB_URI }}
        run: |    
          echo "Waiting for MongoDB to be ready..."
          sleep 15

      - name: DB smoke test
        env:
          MONGODB_URI:  mongodb://localhost:27017/ci_test
         

        run: npm run test:db
