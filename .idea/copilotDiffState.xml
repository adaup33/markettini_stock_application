<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/components/NavItems.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/components/NavItems.tsx" />
              <option name="originalContent" value="'use client'&#10;&#10;import {NAV_ITEMS} from &quot;@/lib/constants&quot;;&#10;import Link from &quot;next/link&quot;;&#10;import {usePathname} from &quot;next/navigation&quot;;&#10;import SearchCommand from &quot;@/components/SearchCommand&quot;;&#10;&#10;const NavItems = ({initialStocks}: { initialStocks: StockWithWatchlistStatus[]}) =&gt; {&#10;    const pathname = usePathname()&#10;&#10;    const isActive = (path: string) =&gt; {&#10;        if (path === '/') return pathname === '/';&#10;&#10;        return pathname.startsWith(path);&#10;    }&#10;&#10;    return (&#10;        &lt;ul className=&quot;flex flex-col sm:flex-row p-2 gap-3 sm:gap-10 font-medium&quot;&gt;&#10;            {NAV_ITEMS.map(({ href, label }) =&gt; {&#10;                if(href === '/search') return (&#10;                    &lt;li key=&quot;search-trigger&quot;&gt;&#10;                        &lt;SearchCommand&#10;                            renderAs=&quot;text&quot;&#10;                            label=&quot;Search&quot;&#10;                            initialStocks={initialStocks}&#10;                        /&gt;&#10;                    &lt;/li&gt;&#10;                )&#10;&#10;                const active = isActive(href);&#10;&#10;                return &lt;li key={href}&gt;&#10;                    &lt;Link href={href} className={`transition-colors px-1 py-0.5 rounded-sm ${&#10;                        active ? 'text-yellow-400 font-semibold' : 'text-gray-300 hover:text-yellow-400'&#10;                    }`}&gt;&#10;                        {label}&#10;                    &lt;/Link&gt;&#10;                &lt;/li&gt;&#10;            })}&#10;        &lt;/ul&gt;&#10;    )&#10;}&#10;export default NavItems" />
              <option name="updatedContent" value="'use client'&#10;&#10;import {NAV_ITEMS} from &quot;@/lib/constants&quot;;&#10;import Link from &quot;next/link&quot;;&#10;import {usePathname} from &quot;next/navigation&quot;;&#10;import SearchCommand from &quot;@/components/SearchCommand&quot;;&#10;&#10;const NavItems = ({initialStocks}: { initialStocks: StockWithWatchlistStatus[]}) =&gt; {&#10;    const pathname = usePathname()&#10;&#10;    const isActive = (path: string) =&gt; {&#10;        if (path === '/') return pathname === '/';&#10;&#10;        return pathname.startsWith(path);&#10;    }&#10;&#10;    return (&#10;        &lt;ul className=&quot;flex flex-col sm:flex-row p-2 gap-3 sm:gap-10 font-medium&quot;&gt;&#10;            {NAV_ITEMS.map(({ href, label }) =&gt; {&#10;                if(href === '/search') return (&#10;                    &lt;li key=&quot;search-trigger&quot;&gt;&#10;                        &lt;SearchCommand&#10;                            renderAs=&quot;text&quot;&#10;                            label=&quot;Search&quot;&#10;                            initialStocks={initialStocks}&#10;                        /&gt;&#10;                    &lt;/li&gt;&#10;                )&#10;&#10;                const active = isActive(href);&#10;&#10;                return &lt;li key={href}&gt;&#10;                    &lt;Link href={href} className={`transition-colors px-1 py-0.5 rounded-sm ${&#10;                        active ? 'text-yellow-400 font-semibold' : 'text-gray-300 hover:text-yellow-400 hover:bg-gray-800'&#10;                    }`}&gt;&#10;                        {label}&#10;                    &lt;/Link&gt;&#10;                &lt;/li&gt;&#10;            })}&#10;        &lt;/ul&gt;&#10;    )&#10;}&#10;export default NavItems" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/components/WatchlistButton.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/components/WatchlistButton.tsx" />
              <option name="originalContent" value="&quot;use client&quot;;&#10;import React, { useMemo, useState } from &quot;react&quot;;&#10;&#10;const WatchlistButton = ({&#10;                             symbol,&#10;                             isInWatchlist,&#10;                             showTrashIcon = false,&#10;                             type = &quot;button&quot;,&#10;                             onWatchlistChange,&#10;                         }: WatchlistButtonProps) =&gt; {&#10;    const [added, setAdded] = useState&lt;boolean&gt;(isInWatchlist);&#10;&#10;    const label = useMemo(() =&gt; {&#10;        if (type === &quot;icon&quot;) return added ? &quot;&quot; : &quot;&quot;;&#10;        return added ? &quot;Remove from Watchlist&quot; : &quot;Add to Watchlist&quot;;&#10;    }, [added, type]);&#10;&#10;    const handleClick = (e: React.MouseEvent) =&gt; {&#10;        e.stopPropagation();&#10;        const next = !added;&#10;        setAdded(next);&#10;        onWatchlistChange?.(symbol, next);&#10;    };&#10;&#10;    if (type === &quot;icon&quot;) {&#10;        return (&#10;            &lt;button&#10;                title={added ? `Remove ${symbol} from watchlist` : `Add ${symbol} to watchlist`}&#10;                aria-label={added ? `Remove ${symbol} from watchlist` : `Add ${symbol} to watchlist`}&#10;                className={`watchlist-icon-btn ${added ? &quot;watchlist-icon-added&quot; : &quot;&quot;}`}&#10;                onClick={handleClick}&#10;            &gt;&#10;                &lt;svg&#10;                    xmlns=&quot;http://www.w3.org/2000/svg&quot;&#10;                    viewBox=&quot;0 0 24 24&quot;&#10;                    fill={added ? &quot;#F59E0B&quot; : &quot;none&quot;}&#10;                    stroke=&quot;#F59E0B&quot;&#10;                    strokeWidth=&quot;1.5&quot;&#10;                    className=&quot;watchlist-star h-5 w-5&quot;&#10;                &gt;&#10;                    &lt;path&#10;                        strokeLinecap=&quot;round&quot;&#10;                        strokeLinejoin=&quot;round&quot;&#10;                        d=&quot;M11.48 3.499a.562.562 0 011.04 0l2.125 5.111a.563.563 0 00.475.345l5.518.442c.499.04.701.663.321.988l-4.204 3.602a.563.563 0 00-.182.557l1.285 5.385a.562.562 0 01-.84.61l-4.725-2.885a.563.563 0 00-.586 0L6.982 20.54a.562.562 0 01-.84-.61l1.285-5.385a.563.563 0 00-.182-.557L3.04 10.385a.563.563 0 01.321-.988l5.518-.442a.563.563 0 00.475-.345l2.125-5.111z&quot;&#10;                    /&gt;&#10;                &lt;/svg&gt;&#10;            &lt;/button&gt;&#10;        );&#10;    }&#10;&#10;    return (&#10;        &lt;button className={`watchlist-btn ${added ? &quot;watchlist-remove&quot; : &quot;&quot;}`} onClick={handleClick}&gt;&#10;            {showTrashIcon &amp;&amp; added ? (&#10;                &lt;svg&#10;                    xmlns=&quot;http://www.w3.org/2000/svg&quot;&#10;                    fill=&quot;none&quot;&#10;                    viewBox=&quot;0 0 24 24&quot;&#10;                    strokeWidth={1.5}&#10;                    stroke=&quot;currentColor&quot;&#10;                    className=&quot;w-5 h-5 mr-2&quot;&#10;                &gt;&#10;                    &lt;path strokeLinecap=&quot;round&quot; strokeLinejoin=&quot;round&quot; d=&quot;M6 7h12M9 7V5a1 1 0 011-1h4a1 1 0 011 1v2m-7 4v6m4-6v6m4-6v6&quot; /&gt;&#10;                &lt;/svg&gt;&#10;            ) : null}&#10;            &lt;span&gt;{label}&lt;/span&gt;&#10;        &lt;/button&gt;&#10;    );&#10;};&#10;&#10;export default WatchlistButton;" />
              <option name="updatedContent" value="&quot;use client&quot;;&#10;import React, { useMemo, useState } from &quot;react&quot;;&#10;&#10;const WatchlistButton = ({&#10;                             symbol,&#10;                             isInWatchlist,&#10;                             showTrashIcon = false,&#10;                             type = &quot;button&quot;,&#10;                             onWatchlistChange,&#10;                         }: WatchlistButtonProps) =&gt; {&#10;    const [added, setAdded] = useState&lt;boolean&gt;(isInWatchlist);&#10;&#10;    const label = useMemo(() =&gt; {&#10;        if (type === &quot;icon&quot;) return added ? &quot;&quot; : &quot;&quot;;&#10;        return added ? &quot;Remove from Watchlist&quot; : &quot;Add to Watchlist&quot;;&#10;    }, [added, type]);&#10;&#10;    const handleClick = (e: React.MouseEvent) =&gt; {&#10;        e.stopPropagation();&#10;        const next = !added;&#10;        setAdded(next);&#10;        onWatchlistChange?.(symbol, next);&#10;    };&#10;&#10;    if (type === &quot;icon&quot;) {&#10;        return (&#10;            &lt;button&#10;                title={added ? `Remove ${symbol} from watchlist` : `Add ${symbol} to watchlist`}&#10;                aria-label={added ? `Remove ${symbol} from watchlist` : `Add ${symbol} to watchlist`}&#10;                className={`watchlist-icon-btn ${added ? &quot;watchlist-icon-added&quot; : &quot;&quot;} focus:outline-none`}&#10;                onClick={handleClick}&#10;            &gt;&#10;                &lt;svg&#10;                    xmlns=&quot;http://www.w3.org/2000/svg&quot;&#10;                    viewBox=&quot;0 0 24 24&quot;&#10;                    fill={added ? &quot;#F59E0B&quot; : &quot;none&quot;}&#10;                    stroke={added ? &quot;#DD6B20&quot; : &quot;#9CA3AF&quot;}&#10;                    strokeWidth=&quot;1.5&quot;&#10;                    className=&quot;watchlist-star h-5 w-5&quot;&#10;                &gt;&#10;                    &lt;path&#10;                        strokeLinecap=&quot;round&quot;&#10;                        strokeLinejoin=&quot;round&quot;&#10;                        d=&quot;M11.48 3.499a.562.562 0 011.04 0l2.125 5.111a.563.563 0 00.475.345l5.518.442c.499.04.701.663.321.988l-4.204 3.602a.563.563 0 00-.182.557l1.285 5.385a.562.562 0 01-.84.61l-4.725-2.885a.563.563 0 00-.586 0L6.982 20.54a.562.562 0 01-.84-.61l1.285-5.385a.563.563 0 00-.182-.557L3.04 10.385a.563.563 0 01.321-.988l5.518-.442a.563.563 0 00.475-.345l2.125-5.111z&quot;&#10;                    /&gt;&#10;                &lt;/svg&gt;&#10;            &lt;/button&gt;&#10;        );&#10;    }&#10;&#10;    return (&#10;        &lt;button className={`watchlist-btn ${added ? &quot;watchlist-remove&quot; : &quot;&quot;}`} onClick={handleClick}&gt;&#10;            {showTrashIcon &amp;&amp; added ? (&#10;                &lt;svg&#10;                    xmlns=&quot;http://www.w3.org/2000/svg&quot;&#10;                    fill=&quot;none&quot;&#10;                    viewBox=&quot;0 0 24 24&quot;&#10;                    strokeWidth={1.5}&#10;                    stroke=&quot;currentColor&quot;&#10;                    className=&quot;w-5 h-5 mr-2&quot;&#10;                &gt;&#10;                    &lt;path strokeLinecap=&quot;round&quot; strokeLinejoin=&quot;round&quot; d=&quot;M6 7h12M9 7V5a1 1 0 011-1h4a1 1 0 011 1v2m-7 4v6m4-6v6m4-6v6&quot; /&gt;&#10;                &lt;/svg&gt;&#10;            ) : null}&#10;            &lt;span&gt;{label}&lt;/span&gt;&#10;        &lt;/button&gt;&#10;    );&#10;};&#10;&#10;export default WatchlistButton;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>